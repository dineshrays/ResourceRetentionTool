@model RetentionTool.ViewModel.CircularViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutMain.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="Stylesheet" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.10/themes/redmond/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<div class="breadcrumbs">
    <div class="col-sm-6">
        <div class="page-header float-left">
            <div class="page-title">
                <h1>Circular</h1>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right" style="background-color:white">
                    <li><a href="@Url.Action("Index", "AdminDashboard")">Dashboard /</a></li>
                   
                    <li class="active"> Circular </li>
                </ol>
            </div>
        </div>
    </div>
</div>

    <div class="card-body card-block">

        <div class="row form-group">
            <div class="col col-md-3">
                <div>
                    <input type="radio" value="assignres" name="type" class="chckNor" checked />  Normal
                </div>
            </div>
            
            <div class="col-12 col-md-9">

                <input type="radio" value="assignres" name="type" class="chckAssRes" />  Assign Resource
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                <input type="radio" value="project" name="type" class="chckProj" />  Project


            </div>

            
        </div>

        <div class="row form-group" id="projectdiv" style="display:none">
            <div class="col col-md-3">
                <div>@Html.Label("Project Name")</div>

            </div>
            <div class="col-12 col-md-9">
                <div class="col-12 col-md-9">
                    <input class="form-control" style="width:50%" id="searchproject" />
                    <input id="searchprojectid" style="display:none" />
                    @Html.ValidationMessageFor(m => m.roleId, "Required", new { @class = "text-danger", @id = "errsearchproject" })

                    @*@Html.TextAreaFor(a => a.Contents)*@
                    @*@Html.HiddenFor(m => m.AssignResource_Id)
                    @Html.DropDownListFor(m => m.Trainer_Id, ViewData["trainerslist"] as SelectList, new { @class = "form-control", @id = "trainerid", style = "width:30%" })
                    *@

                </div>
                <br />
            </div>
        </div>

        <div class="row form-group">
            <div class="col col-md-3">
                @Html.Label("User Type", new { @class = "form-control-label", style = "width:150%" })
            </div>
            <div class="col-12 col-md-9">
                @Html.DropDownListFor(m => m.roleId, ViewData["roledetails"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "roleid", style = "width:50%" })
                @Html.ValidationMessageFor(m => m.roleId, "Required", new { @class = "text-danger", @id = "errroleid" })

            </div>
        </div>
        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.Label("Content")</div>

            </div>
            <div class="col-12 col-md-9">

                @Html.TextAreaFor(a => a.Contents, new { @class = "form-control", @id = "content", style = "width:50%" })
                @Html.ValidationMessageFor(m => m.Contents, "Required", new { @class = "text-danger", @id = "errcontent" })



            </div>
        </div>

        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.Label("Date")</div>

            </div>
            <div class="col-12 col-md-9">

                @Html.EditorFor(a => a.Date, new { htmlAttributes = new { @class = "form-control", @id = "date", style = "width:50%" } })

                @Html.ValidationMessageFor(m => m.Date, "Required", new { @class = "text-danger", @id = "errdate" })


            </div>
        </div>

        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.Label("Valid From")</div>

            </div>
            <div class="col-12 col-md-9">

                @Html.EditorFor(a => a.ValidFrom, new { htmlAttributes = new { @class = "form-control", @id = "validfrom", style = "width:50%" } })

                @Html.ValidationMessageFor(m => m.ValidFrom, "Required", new { @class = "text-danger", @id = "errvalidfrom" })


            </div>
        </div>

        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.Label("Valid To")</div>

            </div>
            <div class="col-12 col-md-9">

                @Html.EditorFor(a => a.ValidTo, new { htmlAttributes = new { @class = "form-control", @id = "validto", style = "width:50%" } })
                @Html.ValidationMessageFor(m => m.ValidTo, "Required", new { @class = "text-danger", @id = "errvalidto" })



            </div>
        </div>

        @*<div class="row form-group" id="employeeview">
        <div class="col col-md-3">
            <div>@Html.Label("Employee Name")</div>

        </div>
        <div class="col-12 col-md-9">
            <div class="col-12 col-md-9">
                @Html.HiddenFor(m => m.AssignResource_Id)
                <input class="form-control" style="width:30%" id="searchemp" />
                <input id="searchid" style="display:none" />*@
        @*@Html.DropDownListFor(m => m.Trainer_Id, ViewData["trainerslist"] as SelectList, new { @class = "form-control", style = "width:30%" })*@


        @*</div>
                <br />
            </div>
        </div>*@

        <br />

        <div class="row form-group">
            <div class="col col-md-3">


            </div>
            <div class="col-12 col-md-9">

                <input type="submit" value="Create" id="btnSave" class="btn btn-success" />
            </div>

        </div>
        @*@using (Html.BeginForm("Create", "AssignEvaluater"))
        {*@
        @*<div class="card-body">*@
        
        @*</div>*@
        @*}*@
    </div>


<script>

    $(document).ready(function () {
        $("#errvalidto").hide();
        $("#errroleid").hide();
        $("#errvalidfrom").hide();
        $("#errdate").hide();
        $("#errcontent").hide();
        $("#errsearchproject").hide();
       
    });
    $("#searchproject").keydown(function () {
        if (event.which === 8) {
            if ($("#searchproject").val().length > 0) {
                $("#errsearchproject").hide();
            }
            else if ($("#searchproject").val() === "" || $("#searchproject").val().length === 0) {

                $("#errsearchproject").show();
            }
        }
        else if ($("#searchproject").val() == "") {
            $("#errsearchproject").hide();
        }
    });

    $("#validfrom").change(function () {

        if ($("#validfrom").val().length > 0) {
            $("#errvalidfrom").hide();
        }
        else {
            $("#errvalidfrom").hide();
        }
    });
    $("#validto").change(function () {

        if ($("#validto").val().length > 0) {
            $("#errvalidto").hide();
        }
        else {
            $("#errvalidto").hide();
        }
    });
    $("#date").change(function () {

        if ($("#date").val().length > 0) {
            $("#errdate").hide();
        }
        else {
            $("#errdate").hide();
        }
    });

    $("#content").keydown(function () {
        if (event.which === 8) {
            if ($("#content").val().length > 0) {
                $("#errcontent").hide();
            }
            else if ($("#content").val() === "" || $("#content").val().length === 0) {

                $("#errcontent").show();
            }
        }
        else if ($("#content").val() == "") {
            $("#errcontent").hide();
        }
    });
    function validate(type) {
        if (type != 0) {
            if ($("#searchproject").val().length > 0) {
                $("#errsearchproject").hide();
            }
            else {

                $("#errsearchproject").show();
            }
        }
        
        if ($("#validfrom").val().length > 0) {
            $("#errvalidfrom").hide();
        }
        else {
            $("#errvalidfrom").show();
        }
        if ($("#validto").val().length > 0) {
            $("#errvalidto").hide();
        }
        else {
            $("#errvalidto").show();
        }
        if ($("#content").val().length > 0) {
            $("#errcontent").hide();
        }
        else {

            $("#errcontent").show();
        }
        if ($("#date").val().length > 0) {
            $("#errdate").hide();
        }
        else {
            $("#errdate").show();
        }
    }

</script>

<script>
    $("#btnSave").click(function () {
        var content = $("#content").val();
        var roleid = $("#roleid").val();
        var date = $("#date").val();
        var validfrom = $("#validfrom").val();
        var validto = $("#validto").val();
        var param = { Contents: content, Date: date, ValidFrom: validfrom, ValidTo: validto, roleId: roleid };
        var type = 0;
        var projectid;
        if ($('input.chckAssRes').is(':checked')) {
            type = 1;
            projectid = $("#searchprojectid").val();
        }
        if ($('input.chckNor').is(':checked')) {
            type = 0;
            projectid = 0;
        }
        if ($('input.chckProj').is(':checked')) {
            type = 2;
            projectid = $("#searchprojectid").val();
        }
        validate(type);
        if (content.length > 0 && date.length > 0 && validfrom.length > 0 && validto.length > 0 && type>= 0 && projectid>=0) {
            $("#btnSave").attr('disabled', true);
            $.ajax({
                url: "/Admin/Circular/Create",
                dataType: "json",
                data: JSON.stringify({ circularvm: param, type: type, projectid: projectid }),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    window.location.href = "/Admin/Circular/Index";
                },
                error: function (xhr) {
                    alert("error");
                }
            });
        }
     
    });
    $(document).ready(function () {
        $('input.chckProj').change(

            function () {
                if ($('input.chckProj').is(':checked')) {
                    $('#searchprojectid').val('');
                    $('#searchproject').val('');
                    $('#projectdiv').show();
                    var value = 2;
                    $.ajax(
                        {
                            url: '/Admin/Circular/getRolesDetails',
                            type: 'POST',
                            datatype: 'application/json',
                            contentType: 'application/json',
                            data: JSON.stringify({ type: value }),
                            success: function (result) {
                                $('#roleid').empty();
                                $.each(result, function (i, Role) {
                                    $('#roleid').append('<option value="' + Role.Value + '">' + Role.Text + '</option>');
                                });
                            },
                            error: function () { alert("Something Gone Wrong") },
                        });
                   
                } else {
                    $('#projectdiv').hide();
                    $('#searchprojectid').val('');
                    $('#searchproject').val('');
                    
                }
            });

        $('input.chckAssRes').change(

                function () {
                    if ($('input.chckAssRes').is(':checked')) {
                        $('#searchprojectid').val('');
                        $('#searchproject').val('');
                        $('#projectdiv').show();
                        var value = 1;
                        $.ajax(
                            {
                                url: '/Admin/Circular/getRolesDetails',
                                type: 'POST',
                                datatype: 'application/json',
                                contentType: 'application/json',
                                data: JSON.stringify({ type: value }),
                                success: function (result) {
                                    $('#roleid').empty();
                                    $.each(result, function (i, Role) {
                                        $('#roleid').append('<option value="' + Role.Value + '">' + Role.Text + '</option>');
                                    });
                                },
                                error: function () { alert("Something Gone Wrong") },
                            });

                    } else {
                        $('#projectdiv').hide();
                        $('#searchprojectid').val('');
                        $('#searchproject').val('');

                    }
                });
        $('input.chckNor').change(

            function () {
                if ($('input.chckNor').is(':checked')) {
                    $('#searchprojectid').val('');
                    $('#searchproject').val('');
                    $('#projectdiv').hide();
                    var value = 0;
                    $.ajax(
                        {
                            url: '/Admin/Circular/getRolesDetails',
                            type: 'POST',
                            datatype: 'application/json',
                            contentType: 'application/json',
                            data: JSON.stringify({ type: value }),
                            success: function (result) {
                                $('#roleid').empty();
                                $.each(result, function (i, Role) {
                                    $('#roleid').append('<option value="' + Role.Value + '">' + Role.Text + '</option>');
                                });
                            },
                            error: function () { alert("Something Gone Wrong") },
                        });

                } else {
                    $('#searchprojectid').val('');
                    $('#searchproject').val('');
                    $('#projectdiv').show();

                }
            });
    });

    $(function () {

        $("#searchproject").autocomplete({

            source: function (request, response) {
                var empid = 0;
                if ($('input.chckAssRes').is(':checked')) {
                    empid = 1;
                }
                if ($('input.chckNor').is(':checked')) {
                    empid = 0;
                }
                if ($('input.chckProj').is(':checked')) {
                    empid = 2;
                }
                var param = { name: $('#searchproject').val(), type: empid };

                $.ajax({
                    url: "/Admin/Circular/getProjects",
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name, id: item.Id

                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            select: function (event, ui) {

                event.preventDefault();
                $(this).val(ui.item.label);
                $("#searchprojectid").val(ui.item.id);
                
            }

        });
     
    });
</script>