@model RetentionTool.ViewModel.TrainingViewModel
@{
    ViewBag.Title = "Create Topic";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutMain.cshtml";
    var Topics = ViewBag.Topics;
}

<div class="breadcrumbs">
    <div class="col-sm-6">
        <div class="page-header float-left">
            <div class="page-title">
                <h1>Create Topics</h1>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right" style="background-color:white">
                    <li><a href="@Url.Action("Index", "AdminDashboard")">Dashboard /</a></li>
                    <li><a href="@Url.Action("Index", "Training")">Topics /</a></li>
                    <li class="active"> Create </li>
                </ol>
            </div>
        </div>
    </div>
</div>



<div class="card-body card-block">
    <div class="row form-group">
        <div class="col col-md-3">
            <div>@Html.LabelFor(m => m.TrainingVm.FromDate, new { @class = "form-control-label" })</div>
        </div>
        <div class="col-12 col-md-9">
            <div>@Html.EditorFor(m => m.TrainingVm.FromDate, new { htmlAttributes = new { @Id = "FromDate", @class = "form-control", style = "width:40%;color: #cbd1d4;" } })</div><br />
            @Html.ValidationMessageFor(m => m.TrainingVm.FromDate, "Required", new { @class = "text-danger", @id = "errfrmdate" })
            
        </div>
    </div>

    <div class="row form-group">
        <div class="col col-md-3">
            <div>@Html.LabelFor(m => m.TrainingVm.ToDate, new { @class = "form-control-label" })</div>
        </div>
        <div class="col-12 col-md-9">
            <div>@Html.EditorFor(m => m.TrainingVm.ToDate, new { htmlAttributes = new { @Id = "ToDate", @class = "form-control", style = "width:40%;color: #cbd1d4;" } })</div><br />
            @Html.ValidationMessageFor(m => m.TrainingVm.ToDate, "Required", new { @class = "text-danger", @id = "errtodate" })
        </div>
       
    </div>

    <table class="table table-striped">
        <tr>
            <th>Topics</th>
            <th>Hours Required</th>
        </tr>

        <tbody>
            @foreach (var emplist1 in Topics)
            {
                <tr>
                    <td style="display:none" id="Id">@emplist1.Id</td>
                    <td id="Topics">@emplist1.Topics</td>
                    <td><input type="text" id="@emplist1.Id"  onchange="validateHhMm(this);" /></td>
                </tr>
            }
        </tbody>

    </table>
    @Html.ValidationMessageFor(m => m.TrainingVm.FromDate, "Required", new { @class = "text-danger", @id = "errTopics" })
    <div class="card-body">
        <div class="row form-group">
            <div class="col col-md-3">
            </div>
            <div class="col-12 col-md-9">

                <button type="button" id="btnGet" class="btn btn-success">Create</button>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">
    function validateHhMm(inputField) {
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField.value);

        if (isValid) {
           // inputField.style.backgroundColor = '#bfa';
        } else {
        //    inputField.style.backgroundColor = '#fba';
            inputField.focus();
            alert('Hours Should be in HH:mm')
        }
      
        return isValid;
    }
    function validateHours(inputField) {
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField);

        if (isValid) {
            
        } else {
        
            validHr = 1;
          
        }

        return isValid;
    }
    //ToDate,errtodate   FromDate,errfrmdate
    $("#ToDate").change(function () {

        if ($("#ToDate").val().length > 0) {
            $('#ToDate').css("color", "#555");
            $("#errtodate").hide();
        }
        else {
            $('#ToDate').css("color", "#cbd1d4");
            $("#errtodate").show();
        }
    });
    $("#FromDate").change(function () {

        if ($("#FromDate").val().length > 0) {
            $('#FromDate').css("color", "#555");
            $("#errfrmdate").hide();
        }
        else {
            $('#FromDate').css("color", "#cbd1d4");
            $("#errfrmdate").show();
        }
    });
  
  

    function validate() {
        if ($("#FromDate").val().length > 0) {
            $("#errfrmdate").hide();
        }
        else {

            $("#errfrmdate").show();
        }
        if ($("#ToDate").val().length > 0) {
            $("#errtodate").hide();
        }
        else {
            $("#errtodate").show();
        }
        
    }
</script>
<script type="text/javascript">
    var assignresid;
    var validHr = 0;
    $(document).ready(function () {

        var assign = location.search.substring(1).split('&');


        var ass = assign[1].split('=');
        assignresid = ass[1];
        //alert(assignresid);
        $("#errTopics").hide();
        $("#errtodate").hide();

        $("#errfrmdate").hide();


    });
    $(function () {
        $("#btnGet").click(function () {

            validHr = 0;
            var FromDate = $("#FromDate").val();

            var ToDate = $("#ToDate").val();


            var itemlist1 = [];
            var topicshr = 0;
          

            $("table tr:not(:first)").each(function () {
                var tdlist = $(this).find("td");
               
                var valueid = $(tdlist[0]).html();
               // alert(valueid);
               // var hrval = "#hours+" + valueid;
                // var hour = $(hrval).val();
                var hr = $("#" + valueid).val();
               // alert(hr);
                if (hr.length == 0) {
                    topicshr = 1;
                }
                var valid = validateHours(hr);
                //if (valid == "false") {
                //    alert('false')
                //    validHr = 1;
                //}
                var Item = { Training_Id: $('Id').val(), Topics: $(tdlist[0]).html(), HoursRequired: hr };
                itemlist1.push(Item);
            })
            validate();
            if (topicshr == 0 && validHr==0) {


                if (FromDate.length > 0 && ToDate.length > 0 && assignresid > 0 && itemlist1.length > 0) {


                    $("#btnGet").attr('disabled', true);
                    var mod = { FromDate: FromDate, ToDate: ToDate, AssignResource_Id: assignresid };
                    var newUrl = '@Url.Action("Index", "Training")';
                    $.ajax({
                        type: "POST",
                        url: "/Admin/Training/Createtraining",
                        data: JSON.stringify({ itemlist: itemlist1, TrainingVM: mod }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            window.location.href = newUrl;
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },

                    });
                }
            }
            else {
                $("#errTopics").show();
            }
        });
    });
</script>
