@model  RetentionTool.ViewModel.SessionSummaryViewModel
@{
    ViewBag.Title = "Create Session";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutMain.cshtml";

    var empDetails = ViewBag.empDetails;
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="Stylesheet" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.10/themes/redmond/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<div class="breadcrumbs">
    <div class="col-sm-6">
        <div class="page-header float-left">
            <div class="page-title">
                <h1>Create Session Summary</h1>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right" style="background-color:white">
                    <li><a href="@Url.Action("Index", "AdminDashboard")">Dashboard /</a></li>
                    <li><a href="@Url.Action("Index", "SessionSummary")">Session Summary /</a></li>
                    <li class="active"> Create </li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="card">
    @*<div class="card-header">

            <h2>Create Session Summary</h2>
        </div>*@
    <div class="card-body card-block">

        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.LabelFor(m => m.session.Date, new { @class = "form-control-label" })</div>
            </div>
            <div class="col-12 col-md-9">
                <div>
                    @Html.EditorFor(m => m.session.Date, new { htmlAttributes = new { @class = "form-control", @id = "date", style = "width:60%;color: #cbd1d4;" } })

                    @Html.ValidationMessageFor(model => model.session.Date, "Required", new { @class = "text-danger", @id = "errdate" })

                </div><br />
            </div>
        </div>

        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.LabelFor(m => m.session.Hours, new { @class = "form-control-label" })</div>
            </div>
            <div class="col-12 col-md-9">
                <div>@Html.TextBoxFor(m => m.session.Hours, new { @id = "hours", @class = "form-control", style = "width:60%", @onchange = "validateHhMm(this);" })</div><br />
                @Html.ValidationMessageFor(model => model.session.Hours, "Required", new { @class = "text-danger", @id = "errhour" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col col-md-3">
                <div>@Html.LabelFor(m => m.session.Description, new { @class = "form-control-label" })</div>
            </div>
            <div class="col-12 col-md-9">
                <div>@Html.TextBoxFor(m => m.session.Description, new { @id = "descr", @class = "form-control", style = "width:60%" })</div><br />
                @Html.ValidationMessageFor(model => model.session.Description, "Required", new { @class = "text-danger", @id = "errdesc" })
            </div>
        </div>

     


        <table class="table table-striped">
            @*mytbl*@

            <tr>

                <th style="display:none">Employee Id</th>
                <th>Employee Name</th>
                <th>Attendance</th>
                <th>Remarks</th>
            </tr>

            @foreach (var emplist1 in empDetails)
            {

                <tr>

                    <td style="display:none">@emplist1.Id</td>
                    <td>@emplist1.Name</td>
                    <td><input type="checkbox" class="chck" name="attendance" /></td>
                    <td><input type="text" name="remark" id="remarkval" /></td>
                </tr>

            }


        </table>
     
        @Html.ValidationMessageFor(model => model.session.Description, "Required", new { @class = "text-danger", @id = "errtbl" })

        <div class="row form-group">
            <div class="col col-md-3">


            </div>
            <div class="col-12 col-md-9">
                <input id="btnSave" type="submit" value="Create" class="btn btn-success" /> @Html.ActionLink("Back to List", "Index")
            </div>

        </div>

    </div>

</div>
<script type="text/javascript">
    var validHr = 0;
    function validateHhMm(inputField) {
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField.value);

        if (isValid) {
            // inputField.style.backgroundColor = '#bfa';
        } else {
            //    inputField.style.backgroundColor = '#fba';
            inputField.focus();
            alert('Hours Should be in HH:mm')
        }

        return isValid;
    }
    function validateHours(inputField) {
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField);

        if (isValid) {

        } else {

            validHr = 1;

        }

        return isValid;
    }
    //$(document).ready(function () {
    //    $("#errtpc").hide();
    //    $("#errdate").hide();
    //    $("#errhour").hide();
    //    $("#errmoduleid").hide();
    //    $("#errcomm_id").hide();


    //});
    ////date, errdate
    $("#date").change(function () {

        if ($("#date").val().length > 0) {
            $('#date').css("color", "#555");
            $("#errdate").hide();
        }
        else {
            $('#date').css("color", "#cbd1d4");
            $("#errdate").show();
        }
    });
    ////hours,errhour
    $("#hours").keydown(function () {
        if (event.which === 8) {
            if ($("#hours").val().length > 0) {
                $("#errhour").hide();
            }
            else if ($("#hours").val() === "" || $("#hours").val().length === 0) {

                $("#errhour").show();
            }
        }
        else if ($("#hours").val() == "") {
            $("#errhour").hide();
        }
    });
    ////descr,errdesc
    $("#descr").keydown(function () {
        if (event.which === 8) {
            if ($("#descr").val().length > 0) {
                $("#errdesc").hide();
            }
            else if ($("#descr").val() === "" || $("#descr").val().length === 0) {

                $("#errdesc").show();
            }
        }
        else if ($("#descr").val() == "") {
            $("#errdesc").hide();
        }
    });
    //   //remarkval  errtbl
    $("#remarkval").keydown(function () {
        if (event.which === 8) {
            if ($("#remarkval").val().length > 0) {
                $("#errtbl").hide();
            }
            else if ($("#remarkval").val() === "" || $("#remarkval").val().length === 0) {

                $("#errtbl").show();
            }
        }
        else if ($("#remarkval").val() == "") {
            $("#errtbl").hide();
        }
    });
    
    //Common_Id,errcomm_id,skill_Id,errskill
    //$("#Common_Id").change(
    //    function () {
    //        if ($("#Common_Id").val() > 0) {
    //            $("#errcomm_id").hide();
    //        }
    //        else {
    //            $("#errcomm_id").show();
    //        }

    //    });
    // moduleid,errmoduleid
    //$("#skill_Id").change(function () {
    //    if ($("#skill_Id").val() > 0) {
    //        $("#errskill").hide();
    //    }
    //    else {

    //        $("#errskill").show();
    //    }

    //});
    //trainerid,errtrainerid


    function validate() {
       
        if ($("#date").val().length > 0) {
            $("#errdate").hide();
        }
        else {
            $("#errdate").show();
        }
        if ($("#hours").val().length > 0) {
            $("#errhour").hide();
        }
        else {

            $("#errhour").show();
        }

        if ($("#descr").val().length > 0) {
            $("#errdesc").hide();
        }
        else {

            $("#errdesc").show();
        }
        

    }


</script>

<script>
    var trainingdetid;
    //$(document).ready(function () {

    //    var training = Request.QueryString["trainingid"];
    //    alert(training);

    //});
    $(document).ready(function () {
        $("#errdate").hide();
        $("#errdesc").hide();
        $("#errhour").hide();
        $("#errtbl").hide();
        //alert("Load...");
        var training = location.search.substring(1).split('&');
            //location.search.split('trainingid=');
        // var training = Request.QueryString["trainingid"];

        var nv = training[0].split('=');
         trainingdetid = nv[1];
       // alert(trainingdetid);
       // alert(nv[1]);
       // var nv1 = training[1].split('=');
      //  var moduleId = nv1[1];
       // alert(nv1[1]);

        //alert(training[0]);
        //alert(training[1]);

      //  var url = HttpContext.Current.Request.Url.AbsoluteUri;

      //  var data = url.Split('?')[1].Split('=')[1];

      //  alert(data);


        //var tid = Request.url.["trainingid"];
        //alert(tid);
    });

    //// .load() method deprecated from jQuery 1.8 onward
    //$(window).on("load", function () {

    //    // Executes when complete page is fully loaded, including
    //    // all frames, objects and images
    //    alert("Window is loaded");
    //});
      $("#btnSave").click(function () {


          var itemlist=[];
          var count = 0;
          $("table tr:not(:first)").each(function () {
              var attendance;
              var remark;
              if ($(this).find('input.chck').is(':checked')) {
                  attendance = true;
              }
              else {
                  attendance = false;
              }
              remark = $(this).find("td:eq(3) input[type='text']").val();
              if ( remark.length > 0) {
                
                
              }
              else {
                  $("#errtbl").show();
                  count = 1;
              }
              var tdlist = $(this).find("td");

              var Item = { Id: $(tdlist[0]).html(), Name: $(tdlist[1]).html(), Attendance: attendance, Remark: remark };
              itemlist.push(Item);
               
                })

          var date = $("#date").val();
        //  alert(date);
          var hours = $("#hours").val();
        //  alert(hours);
          var desc = $("#descr").val();
        //  alert(desc);
          var mod = [];
          validate();
          validateHours(hours);
          if (date.length > 0 && hours.length > 0 && desc.length > 0 && itemlist.length > 0 && count == 0 && validHr==0) {
              var newUrl = '@Url.Action("Index", "SessionSummary")';
              $("#btnSave").attr('disabled', true);
               mod = { TrainingDet_Id: trainingdetid, Date: date, Hours: hours, Description: desc };
           
                $.ajax({
                    url: '@Url.Action("Create", "SessionSummary")', //
                    dataType: "json",
                    data: JSON.stringify({ list: itemlist, sessionVM: mod }),
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        window.location.href = newUrl;
                    },
                    error: function (xhr) {
                        alert("error");
                    }
                });
          }
          if (validHr == 1) {
              $("#errhour").show();
          }
         
            });
</script>