@model RetentionTool.Models.AssignResourceViewModel
@{
    /**/

    ViewBag.Title = "Create Backup";
    Layout = "~/Areas/Manager/Views/Shared/_LayoutMain.cshtml";
}

<style>
    .form-control-label{
        margin-top:0.5rem;
    }
</style>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"/>*@
<link rel="Stylesheet" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.10/themes/redmond/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<div class="breadcrumbs">
    <div class="col-sm-6">
        <div class="page-header float-left">
            <div class="page-title">
                <h1>Create Backup</h1>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right" style="background-color:white">
                    <li><a href="@Url.Action("Index", "ManagerHome")">Dashboard </a></li>
                    <li><a href="@Url.Action("Index", "AssignResource")"> Backups </a></li>
                    <li class="active"> Create </li>
                </ol>
            </div>
        </div>
    </div>
</div>


    <div class="card-body card-block">
        @*@using (Html.BeginForm())

            {*@
        <div class="row form-group">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.Date, new { @class = " form-control-label", style="" })

            </div>
            <div class="col-12 col-md-9">
                @Html.EditorFor(m => m.Date, new { htmlAttributes = new { @class = "form-control", @id = "date", style = "width:30%;color: #cbd1d4;" } })
                @Html.ValidationMessageFor(m => m.Date, "Required", new { @class = "text-danger", @id = "errdate" })
            </div>



        </div>
       
        <div class="row form-group">
            <div class="col col-md-3">
                @Html.Label("Project Name", new { @class = " form-control-label" })

            </div>
            <div class="col-12 col-md-9">
                <input class="form-control" style="width:30%" id="searchproject" />
                <input id="searchprojectid" style="display:none" />
                @Html.ValidationMessageFor(m => m.Project_Id, "Required", new { @class = "text-danger", @id = "errsearchproject" })
            </div>



        </div>
        
        <div class="row form-group">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.managername, new { @class = " form-control-label" })
            </div>
            <div class="col-12 col-md-9" style="margin-top: 0.5rem;">
                @Html.HiddenFor(m => m.Manager_Id, new { @id = "mngrid" })

                @Html.DisplayFor(m => m.managername, new { @id = "managerid", @class = "form-control" })

            </div>
        </div>
        
        <div class="row form-group">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.modulename, new { @class = " form-control-label" })
            </div>
            <div class="col-12 col-md-9">
                @*"Select Module",*@
                @Html.DropDownListFor(m => m.Module_Id, ViewData["moduleslist"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "moduleid", style = "width:30%" })
                @Html.ValidationMessageFor(m => m.Module_Id, "Required", new { @class = "text-danger", @id = "errmoduleid" })
            </div>


        </div>
        
        <div class="row form-group">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.trainername, new { @class = " form-control-label" })
            </div>
            <div class="col-12 col-md-9">
                @Html.DropDownListFor(m => m.Trainer_Id, ViewData["trainerslist"] as SelectList, new { @class = "form-control", @id = "trainerid", style = "width:30%" })
                @Html.ValidationMessageFor(m => m.Trainer_Id, "Required", new { @class = "text-danger", @id = "errtrainerid" })
            </div>

        </div>
        
        <div class="row form-group">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.employeename, new {@id="empname", @class = " form-control-label" })

            </div>
            
            <div class="col-12 col-md-9">
                <input class="form-control" style="width:30%" id="searchemp" />
                <input id="searchid" style="display:none" />
                <input id="searchempname" style="display:none" /><br />
                <input type="button" value="Add" class="add-emp" />

            </div>

        </div>

        <br />
        <div>
            
            <div id="table" style="display:none">
                <table class="table table-striped" style="width:100%">
                    <tr>
                        <th style="display:none">Select</th>
                        <th>Employee Name</th>
                        <th style="display:none;width:0%">Employee Id</th>
                        <th>Employee Code</th>
                        <th>Action</th>
                    </tr>

                </table>
            </div>
            <br />
            @*<button type="button" class="del-emp">Delete</button>*@

        </div>

        <div class="row form-group">
            <div class="col col-md-3">


            </div>
            <div class="col-12 col-md-9">

                <input type="submit" value="Create" id="btnSave" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", "AssignResource", null, new { @class = "btn btn-outline-link" })

            </div>


        </div>
        @*}*@
    </div>



<script>
    $(document).ready(function () {
        $("#errdate").hide();
        $("#errsearchproject").hide();
        //$("#errmanagerid").hide();
        $("#errmoduleid").hide();
        $("#errmanagerid").hide();
        $("#errtrainerid").hide();


    });

    $("#date").change(function () {

        if ($("#date").val().length > 0) {
            $('#date').css("color", "#555");
            $("#errdate").hide();
        }
        else {
            $('#date').css("color", "#cbd1d4");
            $("#errdate").hide();
        }
    });

    $("#searchproject").keydown(function () {
        if (event.which === 8) {
            if ($("#searchproject").val().length > 0) {
                $("#errsearchproject").hide();
            }
            else if ($("#searchproject").val() === "" || $("#searchproject").val().length === 0) {

                $("#errsearchproject").show();
            }
        }
        else if ($("#searchproject").val() == "") {
            $("#errsearchproject").hide();
        }
    });
    ////managerid  errmanagerid
    $("#managerid").change(
        function () {
            if ($("#managerid").val() > 0) {
                $("#errmanagerid").hide();
            }
            else {
                $("#errmanagerid").show();
            }

        });
    // moduleid,errmoduleid
    $("#moduleid").change(function () {
        if ($("#moduleid").val() > 0) {
            $("#errmoduleid").hide();
        }
        else {

            $("#errmoduleid").show();
        }

    });
    //trainerid,errtrainerid
    $("#trainerid").change(function () {
        if ($("#trainerid").val() > 0) {
            $("#errtrainerid").hide();
        }
        else {

            $("#errtrainerid").show();
        }

    });

    function validate() {
        if ($("#date").val().length > 0) {
            $("#errdate").hide();
        }
        else {

            $("#errdate").show();
        }
        if ($("#searchproject").val().length > 0) {
            $("#errsearchproject").hide();
        }
        else {

            $("#errsearchproject").show();
        }

        //if ($("#managerid").val().length > 0) {
        //    $("#errmanagerid").hide();
        //}
        //else {

        //    $("#errmanagerid").show();
        //}
        //  alert($("#moduleid").val());
        if ($("#moduleid").val() > 0) {
            $("#errmoduleid").hide();
        }
        else {

            $("#errmoduleid").show();
        }

        if ($("#trainerid").val().length > 0) {
            $("#errtrainerid").hide();
        }
        else {

            $("#errtrainerid").show();
        }
    }
</script>

<script>
    var empid = [];
     $("#btnSave").click(function () {

                var itemlist = [];

                //get cell values, instead of the header text.
         $("table tr:not(:first)").each(function () {


           //  if ($(this).find('input[name="chck"]').is(':checked')) {
                 var tdlist = $(this).find("td");
                 var Item = { Name: $(tdlist[1]).html(), Id: $(tdlist[2]).html(), EmpCode: $(tdlist[3]).html() };
                 itemlist.push(Item);
            // }

         })

         //$("table tbody").find('input[name="chck"]').each(function () {
         //    if ($(this).is(":checked")) {
         //        var tdlist = $(this).find("td");
         //        var Item = { Name: $(tdlist[1]).html(), Id: $(tdlist[2]).html(), EmpCode: $(tdlist[3]).html() };
         //        itemlist.push(Item);
         //    }
         //});

         var date = $("#date").val();
         var projectid = $("#searchprojectid").val();
         var managerid = $("#mngrid").val();
         var moduleid = $("#moduleid").val();
         var trainerid = $("#trainerid").val();
         validate();
         if (date.length > 0 && projectid > 0 && /*managerid > 0 &&*/ moduleid > 0 && trainerid > 0 && itemlist.length > 0) {
              var newUrl= '@Url.Action("Index", "AssignResource")';
             $("#btnSave").attr('disabled', true);

         var mod = { Manager_Id: managerid, Project_Id: projectid, Trainer_Id: trainerid, Module_Id: moduleid, Date: date };
         // alert(mod);
             if (/*managerid.length > 0 &&*/ projectid.length > 0 && trainerid.length > 0 && moduleid.length > 0 && date.length > 0) {
                 $("#btnSave").attr('diabled', true);

                 $.ajax({
                     url: '/Manager/AssignResource/Create',
                        @*'@Url.Action("Create", "AssignResource")',*@ 
                     dataType: "json",
                     data: JSON.stringify({ list: itemlist, assgnResvm: mod }),
                     type: "POST",
                     contentType: "application/json; charset=utf-8",
                     success: function (result) {
                         //alert("success");
                         $("#date").val('');
                         $("#managerid").val('');
                         $("#moduleid").val('');
                         $("#trainerid").val('');
                         $("table tbody").empty();
                         window.location.href = newUrl;
                     },
                     error: function (xhr) {
                         alert("error");
                     }
                 });
             }
         }
         else {
             alert("Enter all the details");
         }
            });

    $(".add-emp").click(function () {
       
        var empname = $("#searchemp").val();
        var empid = $("#searchid").val();
        var name = $("#searchempname").val();

        if (name.length > 0) {
            $("#table").show();
            var markup = "<tr id =" + empid + "><td style='display:none'></td><td>" + empname + "</td><td style='display: none'>" + empid + "</td><td>" + name + "</td><td><input type='submit' class='btn btn-danger' value='Delete' onclick=delete_Row(" + empid + ")></td></tr>";
            $("table tbody").append(markup);
            $("#searchemp").val('');
            $("#searchid").val('');
            $("#searchempname").val('');
        }
        else {
            alert("Enter the Employee name");
        }
    });

    $(".del-emp").click(

        function () {

            $("table tbody").find('input[name="chck"]').each(function () {
                if ($(this).is(":checked")) {
                    $(this).parents("tr").remove();
                }
            });
        });
    
    function delete_Row(empid) {
        $("#" + empid).remove();
    }

</script>

 
<script>
    var lstempid = [];
    $(document).ready(function () {
        $('#moduleid').change(function () {
            $("#table").show();
         
            lstempid.length = 0;
            //  lstempid.pop();
            var managerid = $("#mngrid").val();
            var trainerid = $("#trainerid").val();
          
            if (managerid > 0 && trainerid > 0) {
                lstempid.push(managerid);
                lstempid.push(trainerid);
                var selected = $('#moduleid').val();
                $.ajax(
                    {
                        url: '/Manager/AssignResource/getEmployeeDetails',
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        data: JSON.stringify({ moduleid: +selected, empid: lstempid }),
                        success: function (result) {
                            $("table tr:not(:first)").remove();
                            $.each(result, function (i, Skill) {
                                var markup = "<tr id =" + Skill.Id + "><td style='display: none'></td><td>" + Skill.Name + "</td><td style='display: none'>" + Skill.Id + "</td><td>" + Skill.EmpCode + "</td><td><input type='submit' class='btn btn-danger' value='Delete' onclick=delete_Row(" + Skill.Id + ")></td></tr>";
                                $("table tbody").append(markup);
                                // $('#skill_Id').append('<option value="' + Skill.Value + '">' + Skill.Text + '</option>');
                            });
                        },
                        error: function () { alert("Something Gone Wrong") },
                    });
            }
            else {
                $('#moduleid').val('0');
                alert('Please select project name');
            }


        })
    });
    $(function () {

        $("#searchproject").autocomplete({

            source: function (request, response) {
                var param = { name: $('#searchproject').val() };

                $.ajax({
                    url: "/Manager/AssignResource/getProjects",
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name, id: item.Id

                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            select: function (event, ui) {

                event.preventDefault();
                $(this).val(ui.item.label);
                $("#searchprojectid").val(ui.item.id);
                var param = { id: ui.item.id };
                $.ajax({
                    url: "/Manager/AssignResource/getProjectInfo",
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",

                    success: function (data) {

                        $("#mngrid").val(data.Manager_Id);
                       
                        $("#trainerid").val(data.Trainer_Id);

                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            }

        });
        $("#searchemp").autocomplete({
            source: function (request, response) {
                var param = { name: $('#searchemp').val() };
                $.ajax({
                    url: "/Manager/AssignResource/getEmployee",
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { name: item.Name, id: item.Id, label: item.EmpCode + '-' + item.Name, lbl: item.EmpCode }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            select: function (event, ui) {
                // prevent autocomplete from updating the textbox
                event.preventDefault();
                $(this).val(ui.item.name);
                $("#searchempname").val(ui.item.lbl);
                $("#searchid").val(ui.item.id);
            }    //minLength as 2, it means when ever user enter 2 character in TextBox the AutoComplete method will fire and get its source data.
        });
    });

</script>
